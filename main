import datetime
import gspread
import smtplib
import config
import ssl
from email.mime.text import MIMEText
from email.mime.multipart import MIMEMultipart

def SheetConnect():

    from oauth2client.service_account import ServiceAccountCredentials
    scope = ['https://spreadsheets.google.com/feeds', 'https://www.googleapis.com/auth/drive']
    creds = ServiceAccountCredentials.from_json_keyfile_name('bot_cred.json', scope)
    client = gspread.authorize(creds)
    
    global sheet
    sheet = client.open("Copy of Candidate Tracker").sheet1

    # Extract and print all of the values
    cand_info = sheet.get_all_records()
    
class Employee():

    def __init__(self, name, email):
        self.name = name
        self.email = email
    
class Candidate():
        
    def __init__(self, name, l_name, end_day):
        self.name = name
        self.l_name = l_name
        self.end_day = end_day
        self.email1 = False
        self.email2 = False
        
class Email():
    
    def __init__(self, email, message):
        self.email = email
        self.messages = message
            
    def Ackowledge(self):
        #check for response
        None
    
class Main():
    
    employee_dict = {
    'AA': 'April',
    'GO': 'Gaby'
    }
    
    def __init__(self):
        self.candidates = []
        self.employees = []
        self.__gen_candidates()
        self.__gen_employees()
        
    def __gen_candidates(self):
        for i, end_date in enumerate(sheet.col_values(1)):
            end_date = sheet(i,1)
            end_date = end_date.split('/')
            end_date = [int(i) for i in end_date]
            end_date.insert(0,end_date[-1])
            end_date.pop(-1)
            end_day = datetime.datetime(end_date[0], end_date[1], end_date[2]).strftime('%j')#
            print(end_day)
            self.candidates.append(Candidate(sheet.cell(i,4).value,sheet.cell(1,3).value,end_day))
            
    def __gen_employees(self):
        self.employees.append(Employee(April, april.anolin@kellyservices.com))
        self.employees.append(Employee(Gaby, gabriela.ong@kellyservices.com))
        
    def SendEmail(self):
        
        password = 'Dylandylan2'
        sent_from = 'kellyservices.bot@gmail.com'
        to = ['dylan.doyle11spam@gmail.com']  
        subject = 'Test'  
        body = 'Text'

        msg = MIMEMultipart()
        msg['To'] =', '.join(to)
        msg['From'] = config.sent_from
        msg['Subject'] = subject
        msg.attach(MIMEText(body, 'plain'))

        context = ssl.create_default_context()
        with smtplib.SMTP_SSL("smtp.gmail.com", 465, context=context) as server:
            server.login(config.sent_from, password)
            server.sendmail(config.sent_from, to, msg.as_string())
    

    
    def Run(self):
        Sheetconnect()
        today = datetime.datetime.now().strftime('%j')
        for candidate in self.candidates:
            current_employee = employee_dict(sheet.cell(i,2).value).Employee.name 
                
            if today - candidate.end_day <= 7 and candidate.email1 is False:
                body = ('Hi {}! Your candidate {}, {} will reach the end of their assignment in 7 days'.format(current_employee, candidate.l_name, candidate.name))
                email1 = True
            if today - candidate.end_day <= 2 and candidate.email2 is False:
                body = ('{}, {} will reach the end of their assignment in 2 days'.format(candidate.l_name, candidate.name))
                email2 = True
    
            print(current_employee)

            
            
             
bot1 = Main()
bot1.run
exit()


    
    
    
    

            


