import datetime
import gspread

def SheetConnect():

    from oauth2client.service_account import ServiceAccountCredentials
    scope = ['https://spreadsheets.google.com/feeds', 'https://www.googleapis.com/auth/drive']
    ServiceAccountCredentials.from_json_keyfile_name('bot_cred.json', scope)
    client = gspread.authorize(creds)

    sheet = client.open("Copy of Candidate Tracker").sheet1

    # Extract and print all of the values
    cand_info = sheet.get_all_records()
    print(*cand_info, sep='\n\n')
    
class Employee():

    def __init__(self, name, email):
        self.name = name
        self.email = email
    
class Candidate():
        
    def __init__(self, name, l_name, end_day):
        self.name = name
        self.l_name = l_name
        self.end_day = end_day
        self.email1 = False
        self.email2 = False
        
class Email():
    
    def __init__(self, email, message):
        self.email = email
        self.messages = message
    
    def SendEmail(self):
        None
            
    def Ackowledge(self):
        #check for response
        None
    
class Main():
    
    employee_dict = {
    'AA': 'April'
    'GO': 'Gaby'
    }
    
    def __init__(self):
        self.candidates = []
        self.employees = []
        self.__gen_candidates()
        self.__gen_employees()
        
    def __gen_candidates(self):
        for i, end_date in enumerate(sheet.col(1))
            end_date = sheet(i,1)
            end_date = end_date.split('/')
            end_date = [int(i) for i in end_date]
            end_date.insert(0,end_date[-1])
            end_date.pop(-1)
            end_day = datetime.datetime(end_date[0], end_date[1], end_date[2]).strftime('%j')#
            print(end_day)
            self.candidates.append(Candidate(sheet(i,4),sheet(1,3),end_day))
            
    def __gen_employees(self):
        self.employees.append(Employee(April, april.anolin@kellyservices.com)
        self.employees.append(Employee(Gaby, gabriela.ong@kellyservices.com)
    
    def Run(self):
        today = datetime.datetime.now().strftime(%j)
        for candidate in self.candidates:
            if today - candidate.end_day <= 7 and candidate.email1 = False
                message = (f'{candidate.l_name}, {candidate.name} will reach the end of their assignment in 7 days')
                email1 = True
            if today - candidate.end_day <= 2 and candidate.email2 = False
                message = (f'{candidate.name} {candidate.l_name} will reach the end of their assignment in 2 days')
                email2 = True
    
          
            
            
            
          
    
    


    
    
    
    

            


